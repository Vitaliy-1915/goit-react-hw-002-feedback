{"version":3,"sources":["components/Statistics/Statistics.module.css","components/StatisticCard/StatisticCard.jsx","components/StatisticTitle/StatisticTitle.jsx","components/FeedbackButton/FeedbackButton.jsx","components/Statistics/Statistics.jsx","components/Notification/Notification.jsx","components/FeedbackStatistics/FeedbackStatistics.jsx","App.js","index.js","components/FeedbackButton/FeedbackButton.module.css"],"names":["module","exports","StatisticCard","children","prototype","PropTypes","node","isRequired","StatisticTitle","props","title","FeedbackButton","options","onIncrement","buttons","Object","keys","className","s","map","button","type","onClick","Statistics","good","neutral","bad","total","positivePercentage","ul","li","Notification","message","FeedbackStatistics","state","handleIncrement","btnOnClick","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2KACAA,EAAOC,QAAU,CAAC,GAAK,uBAAuB,GAAK,yB,2JCEnD,SAASC,EAAT,GAAsC,IAAbC,EAAY,EAAZA,SAEvB,OAAO,kCAAUA,IAGJD,QAEfA,EAAcE,UAAY,CACxBD,SAAUE,IAAUC,KAAKC,YCHZC,MALf,SAAwBC,GACtB,IAAQC,EAAUD,EAAVC,MACR,OAAO,6BAAKA,K,gBCeCC,MAhBf,SAAwBF,GAEtB,IAAQG,EAAyBH,EAAzBG,QAASC,EAAgBJ,EAAhBI,YACXC,EAAUC,OAAOC,KAAKJ,GAE5B,OACE,qBAAKK,UAAWC,IAAEJ,QAAlB,SACGA,EAAQK,KAAI,SAAAC,GAAM,OACjB,wBAAqBC,KAAK,SAASC,QAAS,kBAAMT,EAAYO,IAA9D,SACGA,GADUA,S,gBCKNG,MAbf,SAAoBd,GAClB,IAAQe,EAAkDf,EAAlDe,KAAMC,EAA4ChB,EAA5CgB,QAASC,EAAmCjB,EAAnCiB,IAAKC,EAA8BlB,EAA9BkB,MAAOC,EAAuBnB,EAAvBmB,mBACnC,OACE,qBAAIX,UAAWC,IAAEW,GAAjB,UACE,qBAAIZ,UAAWC,IAAEY,GAAjB,oBAA6BN,KAC7B,qBAAIP,UAAWC,IAAEY,GAAjB,uBAAgCL,KAChC,qBAAIR,UAAWC,IAAEY,GAAjB,mBAA4BJ,KAC5B,qBAAIT,UAAWC,IAAEY,GAAjB,oBAA6BH,KAC7B,qBAAIV,UAAWC,IAAEY,GAAjB,iCAA0CF,SCJjCG,MALf,SAAsBtB,GACpB,IAAQuB,EAAYvB,EAAZuB,QACR,OAAO,6BAAKA,KCEDC,EAAb,4MACEC,MAAQ,CACNV,KAAM,EACNC,QAAS,EACTC,IAAK,GAJT,EAOES,gBAAkB,SAAAC,GAEhB,EAAKC,UAAS,SAAAC,GAAS,sBACpBF,EAAaE,EAAUF,GAAc,OAV5C,EAcEG,mBAAqB,SAACf,EAAMC,EAASC,GAAhB,OAAwBF,EAAOC,EAAUC,GAdhE,EAgBEc,gCAAkC,SAAChB,EAAMC,EAASC,GAAhB,OAChCe,KAAKC,MAAc,IAAPlB,EAAc,EAAKe,mBAAmBf,EAAMC,EAASC,KAjBrE,4CAmBE,WACE,MAA+BiB,KAAKT,MAA5BV,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBC,EAAQgB,KAAKJ,mBAAmBf,EAAMC,EAASC,GAC/CE,EAAqBe,KAAKH,gCAC9BhB,EACAC,EACAC,GAGF,OACE,8BACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAgBhB,MAAM,0BACtB,cAAC,EAAD,CACEE,QAAS+B,KAAKT,MACdrB,YAAa8B,KAAKR,kBAEpB,cAAC,EAAD,CAAgBzB,MAAM,eACrBiC,KAAKJ,mBAAmBf,EAAMC,EAASC,GAAO,EAC7C,cAAC,EAAD,CACEF,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,IAGtB,cAAC,EAAD,CAAcI,QAAQ,+BA9ClC,GAAwCY,aAsDzBX,IClDAY,MARf,WACE,OACE,qBAAK5B,UAAU,MAAf,SACE,cAAC,EAAD,OCAN6B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1BlD,EAAOC,QAAU,CAAC,QAAU,gCAAgC,OAAS,kC","file":"static/js/main.58cc5312.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"li\":\"Statistics_li__1-Nu9\",\"ul\":\"Statistics_ul__1rIj5\"};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction StatisticCard({ children }) {\n  // console.log({children});\n  return <section>{children}</section>;\n}\n\nexport default StatisticCard;\n\nStatisticCard.prototype = {\n  children: PropTypes.node.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction StatisticTitle(props) {\n  const { title } = props;\n  return <h1>{title}</h1>;\n}\n\nexport default StatisticTitle;\n\nStatisticTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from '../FeedbackButton/FeedbackButton.module.css';\n\nfunction FeedbackButton(props) {\n  // console.log(props);\n  const { options, onIncrement } = props;\n  const buttons = Object.keys(options);\n  // console.log(Object.keys(options));\n  return (\n    <div className={s.buttons}>\n      {buttons.map(button => (\n        <button key={button} type=\"button\" onClick={() => onIncrement(button)}>\n          {button}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default FeedbackButton;\n\nFeedbackButton.propTypes = {\n  options: PropTypes.object.isRequired,\n  onIncrement: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from '../Statistics/Statistics.module.css';\n\nfunction Statistics(props) {\n  const { good, neutral, bad, total, positivePercentage } = props;\n  return (\n    <ul className={s.ul}>\n      <li className={s.li}> good: {good}</li>\n      <li className={s.li}> neutral: {neutral}</li>\n      <li className={s.li}> bad: {bad}</li>\n      <li className={s.li}>total: {total}</li>\n      <li className={s.li}>positivePercentage: {positivePercentage}</li>\n    </ul>\n  );\n}\n\nexport default Statistics;\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Notification(props) {\n  const { message } = props;\n  return <h2>{message}</h2>;\n}\n\nexport default Notification;\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n","import React, { Component } from 'react';\nimport StatisticCard from '../StatisticCard/StatisticCard';\nimport StatisticTitle from '../StatisticTitle/StatisticTitle';\nimport FeedbackButton from '../FeedbackButton/FeedbackButton';\nimport Statistics from '../Statistics/Statistics';\nimport Notification from '../Notification/Notification';\n\nexport class FeedbackStatistics extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleIncrement = btnOnClick => {\n    // console.log(btnOnClick);\n    this.setState(prevState => ({\n      [btnOnClick]: prevState[btnOnClick] + 1,\n    }));\n  };\n\n  countTotalFeedback = (good, neutral, bad) => good + neutral + bad;\n\n  countPositiveFeedbackPercentage = (good, neutral, bad) =>\n    Math.round((good * 100) / this.countTotalFeedback(good, neutral, bad));\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback(good, neutral, bad);\n    const positivePercentage = this.countPositiveFeedbackPercentage(\n      good,\n      neutral,\n      bad,\n    );\n\n    return (\n      <div>\n        <StatisticCard>\n          <StatisticTitle title=\"Please leave feedback\" />\n          <FeedbackButton\n            options={this.state}\n            onIncrement={this.handleIncrement}\n          />\n          <StatisticTitle title=\"Statistics\" />\n          {this.countTotalFeedback(good, neutral, bad) > 0 ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={positivePercentage}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </StatisticCard>\n      </div>\n    );\n  }\n}\n\nexport default FeedbackStatistics;\n","import './App.css';\nimport FeedbackStatistics from './components/FeedbackStatistics/FeedbackStatistics';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <FeedbackStatistics />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttons\":\"FeedbackButton_buttons__2vwft\",\"button\":\"FeedbackButton_button__2I_xl\"};"],"sourceRoot":""}